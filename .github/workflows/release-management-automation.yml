name: Automate some steps of release management
# No git flow handled here

on:
  milestone:
    types: [created]

jobs:
  get-release-version:
    runs-on: ubuntu-latest
    env:
      MILESTONES_VERSION: ${{ github.event.milestone.title }}
    steps:
      - uses: actions/checkout@v3
      - name: Check if this release is a patch release only
        run: |
          echo version: $MILESTONES_VERSION
          if [[ $MILESTONES_VERSION =~ ^v[0-9]+\.[0-9]+\.0$ ]]; then
            echo 'This is NOT a patch release'
            echo ::set-output name=patch::false
          elif [[ $MILESTONES_VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo 'This is a patch release'
            echo ::set-output name=patch::true
          else
            echo 'Not a valid format of release, check the Milestones title.'
            echo 'Should be vX.Y.Z'
            exit 1
          fi

  create-roadmap-issue:
    needs: get-release-version
    # Create the roadmap issue if the release is not only a patch release
    # if: needs.get-release-version.outputs.patch == 'false'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MILESTONES_VERSION: ${{ github.event.milestone.title }}
    steps:
      - uses: actions/checkout@v3
      - run: echo ${{ needs.get-release-version.outputs.patch }}
      - name: Download the issue template
        run: curl -s https://raw.githubusercontent.com/meilisearch/core-team/main/issue-templates/roadmap-issue.md > roadmap-issue-template.md
      # - name: Replace <<version>> by the release version in the template
      #   run: |
      #     sed ...
      # - name: Create the issue
      #   run: gh issue create --title "Upgrade dependencies" --label "dependencies,maintenance" --body-file ".github/ISSUE_TEMPLATE/update_dependencies.md"

# create-roadmap-issue:
# create-label:
# labalize-issues: when closing -> open an issue
